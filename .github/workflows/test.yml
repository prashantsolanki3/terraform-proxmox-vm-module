name: Test

on:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    # runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - name: Install Cloudflare Warp Client
        run: |
          # Add cloudflare gpg key
          curl https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
                
          # Add this repo to your apt repositories
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list
    
          # Install
          sudo apt-get update && sudo apt-get install cloudflare-warp
      - name: Create org file
        run: |
          # Create multi-line file using EOF. Content of the file is the same as the one in the question.
          sudo bash -c 'cat <<EOF >> /var/lib/cloudflare-warp/mdm.xml
          <dict>
            <key>organization</key>
            <string>prashant-home</string>
            <key>auth_client_id</key>
            <string>44c91d4c7724a9bc41d03af442f1b54b.access</string>
            <key>auth_client_secret</key>
            <string>53aa6848e7db406ebd474308260f05ec71d3ee4508666fc50e6a1d36e064c47a</string>
            <key>switch_locked</key>
            <boolean>true</boolean>
            <key>onboarding</key>
            <boolean>false</boolean>
            <key>auto_connect</key>
            <integer>0</integer>
            </dict>
          EOF'
      # - name: Configure Cloudflare Warp Client
      #   run: |
      #     warp-cli --accept-tos teams-enroll prashant-home
      #     sleep 15
      - name: Delete WARP
        run: warp-cli --accept-tos delete
      - name: Register WARP
        run: warp-cli --accept-tos register
      - name: Check Cloudflare Warp Client Status
        run: warp-cli --accept-tos account
      - name: Connect to Cloudflare Warp Client
        run: warp-cli --accept-tos connect
      - name: Test connection
        run: ping -c 2 172.16.1.50
      # - name: HashiCorp - Setup Terraform
      #   uses: hashicorp/setup-terraform@v2.0.3
        
      # - name: Install ansible
      #   run: python3 -m pip install ansible
      
      # - name: terraform init
      #   run: terraform init

      # - name: terraform-apply
      #   run: terraform apply -var-file=/mnt/env/vm-playground/terraform.tfvars -state=/mnt/env/vm-playground/state/terraform.tfstate --auto-approve
